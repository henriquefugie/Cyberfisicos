MODULE main

VAR

    a: -50 .. 50; b: -50 .. 50;
    pc: {l1, l2, l3, l4, l5};

ASSIGN

     init(pc):= l1;
     next(pc):= case pc = l1 & a != b : l2;
                    pc = l1 & a = b : l5;
                    pc = l2 & a > b : l3;
                    pc = l2 & a <= b : l4;
                    pc = l3 | pc = l4 : l1;
                    pc = l5 : l5;
               esac;
     next(a) := case pc = l3 : (a - b) mod 51;
                    TRUE : a;
               esac;
     next(b) := case pc = l4 : (b - a) mod 51;
                    TRUE : b;
               esac;

-- SPEC
-- AF(pc = l5 -> (a = b))

-- SPEC
-- AF(pc = l5 -> AF(a = b))

-- SPEC
-- AG(pc = l5 -> (a = b))

-- SPEC
-- AG(pc = l5 -> AF(a = b))

SPEC
AG(pc = l5 -> AG(a = b))
